AWSTemplateFormatVersion: "2010-09-09"
Description: Website CloudFormation stack

Parameters:
  Domain:
    Type: String
    Description: The DNS name of an existing Amazon Route53 hosted zone, e.g. moduscreate.com
    AllowedPattern: "(?!-)[a-z0-9-]{1,63}(?<!-)\\.(?!-)[a-z0-9-]{1,63}(?<!-)"
    ConstraintDescription: must be a valid DNS zone name.
  Subdomain:
    Type: String
    Description: The DNS subdomain name, e.g. www
    AllowedPattern: "(?!-)[a-z0-9-]{1,63}(?<!-)"
    ConstraintDescription: must be a valid DNS subdomain name.
  AcmCertificateArn:
    Type: String
    Description: The Amazon Resource Name (ARN) of an AWS Certificate Manager (ACM) certificate, e.g. arn:aws:acm:<region>:<account>:certificate/<id>
    AllowedPattern: "arn:aws:acm:[a-z0-9-]+:[\\d]+:certificate/[a-z0-9]{8}-(?:[a-z0-9]{4}-){3}[a-z0-9]{12}"
    ConstraintDescription: must be a valid ARN.
  OriginPath:
    Type: String
    Description: The S3 bucket origin path, e.g. /1.0.0
    AllowedPattern: "(?:^(?:/[a-zA-Z0-9_.*!()-]+)+$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  PriceClass:
    Type: String
    Description: The CloudFront price class
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
    Default: PriceClass_All
    ConstraintDescription: must be a valid price class.
  DefaultRootObject:
    Type: String
    Description: The object that you want CloudFront to request from S3 when a viewer requests the root URL for your distribution, e.g. index.html
    AllowedPattern: "(?!/)[a-zA-Z0-9_.*$&/~-]*"
    Default: "index.html"
    ConstraintDescription: must be a valid object name.
  MinimumProtocolVersion:
    Type: String
    Description: The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections
    AllowedValues:
      - TLSv1
      - TLSv1_2016
      - TLSv1.1_2016
      - TLSv1.2_2018
    Default: TLSv1.2_2018
    ConstraintDescription: must be a valid protocol version.
  SslSupportMethod:
    Type: String
    Description: The method by which CloudFront serves HHTPS requests
    AllowedValues:
      - sni-only
      - vip
    Default: sni-only
    ConstraintDescription: must be a valid ssl support method.
  HttpVersion:
    Type: String
    Description: The maximum HTTP version that you want viewers to use to communicate with CloudFront
    AllowedValues:
      - http1.1
      - http2
    Default: http2
    ConstraintDescription: must be a valid http version.
  IPV6Enabled:
    Type: String
    Description: If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution
    AllowedValues:
      - true
      - false
    Default: false
    ConstraintDescription: must be true or false.
  MinTTL:
    Type: Number
    Description: The minimum amount of time that you want objects to stay in the cache before CloudFront queries your origin to see whether the object has been updated
    MaxValue: 31536000
    MinValue: 0
    Default: 0
    ConstraintDescription: must be a valid number.
  MaxTTL:
    Type: Number
    Description: The maximum time in seconds that objects stay in CloudFront caches before CloudFront forwards another request to your custom origin to determine whether the object has been updated
    MaxValue: 31536000
    MinValue: 0
    Default: 31536000
    ConstraintDescription: must be a valid number.
  DefaultTTL:
    Type: Number
    Description: The default time in seconds that objects stay in CloudFront caches before CloudFront forwards another request to your custom origin to determine whether the object has been updated
    MaxValue: 31536000
    MinValue: 0
    Default: 31536000
    ConstraintDescription: must be a valid number.
  400ResponseCode:
    Type: Number
    Description: The HTTP status code that CloudFront returns to a viewer along with the custom error page for HTTP 400 errors
    AllowedValues:
      - 200
      - 400
      - 403
      - 404
      - 405
      - 414
      - 500
      - 501
      - 502
      - 503
      - 504
    Default: 400
    ConstraintDescription: must be a valid HTTP status code.
  400ResponsePagePath:
    Type: String
    Description: The path to the custom error page that CloudFront returns to a viewer for HTTP 400 errors
    AllowedPattern: "(?:^/[a-zA-Z0-9_.*$&/~-]*$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  403ResponseCode:
    Type: Number
    Description: The HTTP status code that CloudFront returns to a viewer along with the custom error page for HTTP 403 errors
    AllowedValues:
      - 200
      - 400
      - 403
      - 404
      - 405
      - 414
      - 500
      - 501
      - 502
      - 503
      - 504
    Default: 403
    ConstraintDescription: must be a valid HTTP status code.
  403ResponsePagePath:
    Type: String
    Description: The path to the custom error page that CloudFront returns to a viewer for HTTP 403 errors
    AllowedPattern: "(?:^/[a-zA-Z0-9_.*$&/~-]*$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  404ResponseCode:
    Type: Number
    Description: The HTTP status code that CloudFront returns to a viewer along with the custom error page for HTTP 404 errors
    AllowedValues:
      - 200
      - 400
      - 403
      - 404
      - 405
      - 414
      - 500
      - 501
      - 502
      - 503
      - 504
    Default: 200
    ConstraintDescription: must be a valid HTTP status code.
  404ResponsePagePath:
    Type: String
    Description: The path to the custom error page that CloudFront returns to a viewer for HTTP 404 errors
    AllowedPattern: "(?:^/[a-zA-Z0-9_.*$&/~-]*$|^$)"
    Default: "/index.html"
    ConstraintDescription: must be a valid path.
  405ResponseCode:
    Type: Number
    Description: The HTTP status code that CloudFront returns to a viewer along with the custom error page for HTTP 405 errors
    AllowedValues:
      - 200
      - 400
      - 403
      - 404
      - 405
      - 414
      - 500
      - 501
      - 502
      - 503
      - 504
    Default: 405
    ConstraintDescription: must be a valid HTTP status code.
  405ResponsePagePath:
    Type: String
    Description: The path to the custom error page that CloudFront returns to a viewer for HTTP 405 errors
    AllowedPattern: "(?:^/[a-zA-Z0-9_.*$&/~-]*$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  414ResponseCode:
    Type: Number
    Description: The HTTP status code that CloudFront returns to a viewer along with the custom error page for HTTP 414 errors
    AllowedValues:
      - 200
      - 400
      - 403
      - 404
      - 405
      - 414
      - 500
      - 501
      - 502
      - 503
      - 504
    Default: 414
    ConstraintDescription: must be a valid HTTP status code.
  414ResponsePagePath:
    Type: String
    Description: The path to the custom error page that CloudFront returns to a viewer for HTTP 414 errors
    AllowedPattern: "(?:^/[a-zA-Z0-9_.*$&/~-]*$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  500ResponseCode:
    Type: Number
    Description: The HTTP status code that CloudFront returns to a viewer along with the custom error page for HTTP 500 errors
    AllowedValues:
      - 200
      - 400
      - 403
      - 404
      - 405
      - 414
      - 500
      - 501
      - 502
      - 503
      - 504
    Default: 500
    ConstraintDescription: must be a valid HTTP status code.
  500ResponsePagePath:
    Type: String
    Description: The path to the custom error page that CloudFront returns to a viewer for HTTP 500 errors
    AllowedPattern: "(?:^/[a-zA-Z0-9_.*$&/~-]*$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  501ResponseCode:
    Type: Number
    Description: The HTTP status code that CloudFront returns to a viewer along with the custom error page for HTTP 501 errors
    AllowedValues:
      - 200
      - 400
      - 403
      - 404
      - 405
      - 414
      - 500
      - 501
      - 502
      - 503
      - 504
    Default: 501
    ConstraintDescription: must be a valid HTTP status code.
  501ResponsePagePath:
    Type: String
    Description: The path to the custom error page that CloudFront returns to a viewer for HTTP 501 errors
    AllowedPattern: "(?:^/[a-zA-Z0-9_.*$&/~-]*$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  502ResponseCode:
    Type: Number
    Description: The HTTP status code that CloudFront returns to a viewer along with the custom error page for HTTP 502 errors
    AllowedValues:
      - 200
      - 400
      - 403
      - 404
      - 405
      - 414
      - 500
      - 501
      - 502
      - 503
      - 504
    Default: 502
    ConstraintDescription: must be a valid HTTP status code.
  502ResponsePagePath:
    Type: String
    Description: The path to the custom error page that CloudFront returns to a viewer for HTTP 502 errors
    AllowedPattern: "(?:^/[a-zA-Z0-9_.*$&/~-]*$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  503ResponseCode:
    Type: Number
    Description: The HTTP status code that CloudFront returns to a viewer along with the custom error page for HTTP 503 errors
    AllowedValues:
      - 200
      - 400
      - 403
      - 404
      - 405
      - 414
      - 500
      - 501
      - 502
      - 503
      - 504
    Default: 503
    ConstraintDescription: must be a valid HTTP status code.
  503ResponsePagePath:
    Type: String
    Description: The path to the custom error page that CloudFront returns to a viewer for HTTP 503 errors
    AllowedPattern: "(?:^/[a-zA-Z0-9_.*$&/~-]*$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  504ResponseCode:
    Type: Number
    Description: The HTTP status code that CloudFront returns to a viewer along with the custom error page for HTTP 504 errors
    AllowedValues:
      - 200
      - 400
      - 403
      - 404
      - 405
      - 414
      - 500
      - 501
      - 502
      - 503
      - 504
    Default: 504
    ConstraintDescription: must be a valid HTTP status code.
  504ResponsePagePath:
    Type: String
    Description: The path to the custom error page that CloudFront returns to a viewer for HTTP 504 errors
    AllowedPattern: "(?:^/[a-zA-Z0-9_.*$&/~-]*$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  Project:
    Type: String
    Description: The project tag value, e.g. www
    AllowedPattern: "(?!aws:)[\\w .=:/@+-]{1,255}"
    ConstraintDescription: must be a valid tag value.
  Environment:
    Type: String
    Description: The environment tag value, e.g. production
    AllowedPattern: "(?!aws:)[\\w .=:/@+-]{1,255}"
    ConstraintDescription: must be a valid tag value.
  Version:
    Type: String
    Description: The version tag value, e.g. 1.0.0
    AllowedPattern: "(?!aws:)[\\w .=:/@+-]{1,255}"
    ConstraintDescription: must be a valid tag value.

Conditions:
  NotHandling400: !Equals [ !Ref 400ResponsePagePath, "" ]
  NotHandling403: !Equals [ !Ref 403ResponsePagePath, "" ]
  NotHandling404: !Equals [ !Ref 404ResponsePagePath, "" ]
  NotHandling405: !Equals [ !Ref 405ResponsePagePath, "" ]
  NotHandling414: !Equals [ !Ref 414ResponsePagePath, "" ]
  NotHandling500: !Equals [ !Ref 500ResponsePagePath, "" ]
  NotHandling501: !Equals [ !Ref 501ResponsePagePath, "" ]
  NotHandling502: !Equals [ !Ref 502ResponsePagePath, "" ]
  NotHandling503: !Equals [ !Ref 503ResponsePagePath, "" ]
  NotHandling504: !Equals [ !Ref 504ResponsePagePath, "" ]

Resources:
  # S3
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${Subdomain}.${Domain}"
      Tags:
        -
          Key: environment
          Value: !Ref Environment
        -
          Key: project
          Value: !Ref Project
        -
          Key: version
          Value: !Ref Version
    DeletionPolicy: Delete
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn:
      - CloudFrontOriginAccessIdentity
      - S3Bucket
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"
            Action: s3:GetObject
            Resource: !Sub "${S3Bucket.Arn}/*"
  # CloudFront
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - CloudFrontOriginAccessIdentity
      - S3Bucket
      - S3BucketPolicy
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub "${Subdomain}.${Domain}"
        CustomErrorResponses:
          - Fn::If:
            - NotHandling400
            - !Ref AWS::NoValue
            -
              ErrorCode: 400
              ResponseCode: !Ref 400ResponseCode
              ResponsePagePath: !Ref 400ResponsePagePath
          - Fn::If:
            - NotHandling403
            - !Ref AWS::NoValue
            -
              ErrorCode: 403
              ResponseCode: !Ref 403ResponseCode
              ResponsePagePath: !Ref 403ResponsePagePath
          - Fn::If:
            - NotHandling404
            - !Ref AWS::NoValue
            -
              ErrorCode: 404
              ResponseCode: !Ref 404ResponseCode
              ResponsePagePath: !Ref 404ResponsePagePath
          - Fn::If:
            - NotHandling405
            - !Ref AWS::NoValue
            -
              ErrorCode: 405
              ResponseCode: !Ref 405ResponseCode
              ResponsePagePath: !Ref 405ResponsePagePath
          - Fn::If:
            - NotHandling414
            - !Ref AWS::NoValue
            -
              ErrorCode: 414
              ResponseCode: !Ref 414ResponseCode
              ResponsePagePath: !Ref 414ResponsePagePath
          - Fn::If:
            - NotHandling500
            - !Ref AWS::NoValue
            -
              ErrorCode: 500
              ResponseCode: !Ref 500ResponseCode
              ResponsePagePath: !Ref 500ResponsePagePath
          - Fn::If:
            - NotHandling501
            - !Ref AWS::NoValue
            -
              ErrorCode: 501
              ResponseCode: !Ref 501ResponseCode
              ResponsePagePath: !Ref 501ResponsePagePath
          - Fn::If:
            - NotHandling502
            - !Ref AWS::NoValue
            -
              ErrorCode: 502
              ResponseCode: !Ref 502ResponseCode
              ResponsePagePath: !Ref 502ResponsePagePath
          - Fn::If:
            - NotHandling503
            - !Ref AWS::NoValue
            -
              ErrorCode: 503
              ResponseCode: !Ref 503ResponseCode
              ResponsePagePath: !Ref 503ResponsePagePath
          - Fn::If:
            - NotHandling504
            - !Ref AWS::NoValue
            -
              ErrorCode: 504
              ResponseCode: !Ref 504ResponseCode
              ResponsePagePath: !Ref 504ResponsePagePath
        DefaultRootObject: !Ref DefaultRootObject
        Enabled: true
        HttpVersion: !Ref HttpVersion
        IPV6Enabled: !Ref IPV6Enabled
        PriceClass: !Ref PriceClass
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          MinimumProtocolVersion: !Ref MinimumProtocolVersion
          SslSupportMethod: !Ref SslSupportMethod
        Origins:
          -
            Id: !Sub "${Subdomain}.${Domain}"
            DomainName: !GetAtt S3Bucket.DomainName
            OriginPath: !Ref OriginPath
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        DefaultCacheBehavior:
          TargetOriginId: !Sub "${Subdomain}.${Domain}"
          Compress: true
          MinTTL: !Ref MinTTL
          MaxTTL: !Ref MaxTTL
          DefaultTTL: !Ref DefaultTTL
          ForwardedValues:
            QueryString: false
          ViewerProtocolPolicy: redirect-to-https
      Tags:
        -
          Key: environment
          Value: !Ref Environment
        -
          Key: project
          Value: !Ref Project
        -
          Key: version
          Value: !Ref Version
  CloudFrontOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "CloudFront serving S3 ${Subdomain}.${Domain}" # Name (required)
  # Route 53
  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    DependsOn:
      - CloudFrontDistribution
    Properties:
      HostedZoneName: !Sub "${Domain}."
      Name: !Sub "${Subdomain}.${Domain}"
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 # AWS constant
        DNSName: !GetAtt [CloudFrontDistribution, DomainName]

Outputs:
  url:
    Value: !Sub "https://${Subdomain}.${Domain}"
    Description: The website URL
