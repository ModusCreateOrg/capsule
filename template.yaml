AWSTemplateFormatVersion: "2010-09-09"
Description: Website CloudFormation stack

Parameters:
  Domain:
    Type: String
    Description: The DNS name of an existing Amazon Route53 hosted zone, e.g. moduscreate.com
    AllowedPattern: "(?!-)[a-z0-9-]{1,63}(?<!-)\\.(?!-)[a-z0-9-]{1,63}(?<!-)"
    ConstraintDescription: must be a valid DNS zone name.
  Subdomain:
    Type: String
    Description: The DNS subdomain name, e.g. www
    AllowedPattern: "(?!-)[a-z0-9-]{1,63}(?<!-)"
    ConstraintDescription: must be a valid DNS subdomain name.
  AcmCertificateArn:
    Type: String
    Description: The Amazon Resource Name (ARN) of an AWS Certificate Manager (ACM) certificate, e.g. arn:aws:acm:<region>:<account>:certificate/<id>
    AllowedPattern: "arn:aws:acm:[a-z0-9-]+:[\\d]+:certificate/[a-z0-9]{8}-(?:[a-z0-9]{4}-){3}[a-z0-9]{12}"
    ConstraintDescription: must be a valid ARN.
  OriginPath:
    Type: String
    Description: The S3 bucket origin path, e.g. /1.0.0
    AllowedPattern: "(?:^(?:/[a-zA-Z0-9_.*!()-]+)+$|^$)"
    Default: ""
    ConstraintDescription: must be a valid path.
  PriceClass:
    Type: String
    Description: The CloudFront price class
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
    Default: PriceClass_All
    ConstraintDescription: must be a valid price class.
  DefaultRootObject:
    Type: String
    Description: The object that you want CloudFront to request from S3 when a viewer requests the root URL for your distribution, e.g. index.html
    AllowedPattern: "(?!/)[a-zA-Z0-9_.*$&/~-]*"
    Default: "index.html"
    ConstraintDescription: must be a valid object name.
  MinimumProtocolVersion:
    Type: String
    Description: The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections
    AllowedValues:
      - TLSv1
      - TLSv1_2016
      - TLSv1.1_2016
      - TLSv1.2_2018
    Default: TLSv1.2_2018
    ConstraintDescription: must be a valid protocol version.
  SslSupportMethod:
    Type: String
    Description: The method by which CloudFront serves HHTPS requests
    AllowedValues:
      - sni-only
      - vip
    Default: sni-only
    ConstraintDescription: must be a valid ssl support method.
  MinTTL:
    Type: Number
    Description: The minimum amount of time that you want objects to stay in the cache before CloudFront queries your origin to see whether the object has been updated
    MaxValue: 31536000
    MinValue: 0
    Default: 0
    ConstraintDescription: must be a valid number.
  MaxTTL:
    Type: Number
    Description: The maximum time in seconds that objects stay in CloudFront caches before CloudFront forwards another request to your custom origin to determine whether the object has been updated
    MaxValue: 31536000
    MinValue: 0
    Default: 31536000
    ConstraintDescription: must be a valid number.
  DefaultTTL:
    Type: Number
    Description: The default time in seconds that objects stay in CloudFront caches before CloudFront forwards another request to your custom origin to determine whether the object has been updated
    MaxValue: 31536000
    MinValue: 0
    Default: 31536000
    ConstraintDescription: must be a valid number.
  Project:
    Type: String
    Description: The project tag value, e.g. www
    AllowedPattern: "(?!aws:)[\\w .=:/@+-]{1,255}"
    ConstraintDescription: must be a valid tag value.
  Environment:
    Type: String
    Description: The environment tag value, e.g. production
    AllowedPattern: "(?!aws:)[\\w .=:/@+-]{1,255}"
    ConstraintDescription: must be a valid tag value.
  Version:
    Type: String
    Description: The version tag value, e.g. 1.0.0
    AllowedPattern: "(?!aws:)[\\w .=:/@+-]{1,255}"
    ConstraintDescription: must be a valid tag value.

Resources:
  # S3
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${Subdomain}.${Domain}"
      Tags:
        -
          Key: environment
          Value: !Ref Environment
        -
          Key: project
          Value: !Ref Project
        -
          Key: version
          Value: !Ref Version
    DeletionPolicy: Delete
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn:
      - CloudFrontOriginAccessIdentity
      - S3Bucket
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"
            Action: s3:GetObject
            Resource: !Sub "${S3Bucket.Arn}/*"
  # CloudFront
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - CloudFrontOriginAccessIdentity
      - S3Bucket
      - S3BucketPolicy
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub "${Subdomain}.${Domain}"
        DefaultRootObject: !Ref DefaultRootObject
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: false
        PriceClass: !Ref PriceClass
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          MinimumProtocolVersion: !Ref MinimumProtocolVersion
          SslSupportMethod: !Ref SslSupportMethod
        Origins:
          -
            Id: !Sub "${Subdomain}.${Domain}"
            DomainName: !GetAtt S3Bucket.DomainName
            OriginPath: !Ref OriginPath
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        DefaultCacheBehavior:
          TargetOriginId: !Sub "${Subdomain}.${Domain}"
          Compress: true
          MinTTL: !Ref MinTTL
          MaxTTL: !Ref MaxTTL
          DefaultTTL: !Ref DefaultTTL
          ForwardedValues:
            QueryString: false
          ViewerProtocolPolicy: redirect-to-https
      Tags:
        -
          Key: environment
          Value: !Ref Environment
        -
          Key: project
          Value: !Ref Project
        -
          Key: version
          Value: !Ref Version
  CloudFrontOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "CloudFront serving S3 ${Subdomain}.${Domain}" # Name (required)
  # Route 53
  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    DependsOn:
      - CloudFrontDistribution
    Properties:
      HostedZoneName: !Sub "${Domain}."
      Name: !Sub "${Subdomain}.${Domain}"
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 # AWS constant
        DNSName: !GetAtt [CloudFrontDistribution, DomainName]

Outputs:
  url:
    Value: !Sub "https://${Subdomain}.${Domain}"
    Description: The website url
